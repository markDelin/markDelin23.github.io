<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Stylish Multiple Audio Players</title>
    <style>
        /* General Styles */
        body {
            font-family: Arial, sans-serif;
            background-color: #f0f2f5;
            color: #333;
            margin: 0;
            padding: 50px;
            display: flex;
            justify-content: center;
            align-items: center;
            min-height: 100vh;
        }

        .audio-container {
            background-color: #fff;
            border-radius: 10px;
            box-shadow: 0 5px 15px rgba(0,0,0,0.1);
            padding: 30px;
            max-width: 500px;
            width: 100%;
            margin: 20px;
        }

        .audio-player {
            display: flex;
            flex-direction: column;
            align-items: center;
            margin-bottom: 30px;
        }

        .audio-player:last-child {
            margin-bottom: 0;
        }

        .audio-title {
            font-size: 1.2em;
            margin-bottom: 15px;
            text-align: center;
        }

        .controls {
            display: flex;
            align-items: center;
            width: 100%;
            justify-content: space-around;
            margin-bottom: 10px;
        }

        .play-button {
            background-color: #007bff;
            border: none;
            color: #fff;
            padding: 12px 20px;
            font-size: 16px;
            border-radius: 50px;
            cursor: pointer;
            transition: background-color 0.3s;
            outline: none;
        }

        .play-button:hover {
            background-color: #0056b3;
        }

        .time-slider {
            -webkit-appearance: none;
            width: 100%;
            height: 5px;
            background: #ddd;
            border-radius: 5px;
            outline: none;
            transition: background 0.3s;
            cursor: pointer;
        }

        .time-slider::-webkit-slider-thumb {
            -webkit-appearance: none;
            appearance: none;
            width: 15px;
            height: 15px;
            border-radius: 50%;
            background: #007bff;
            cursor: pointer;
            transition: background-color 0.3s;
        }

        .time-slider::-webkit-slider-thumb:hover {
            background: #0056b3;
        }

        .time-info {
            font-size: 0.9em;
            color: #666;
            margin-top: 5px;
            text-align: center;
        }

        /* Responsive Design */
        @media (max-width: 600px) {
            .audio-container {
                padding: 20px;
            }

            .play-button {
                padding: 10px 16px;
                font-size: 14px;
            }
        }
    </style>
</head>
<body>

    <div class="audio-container">

        <!-- Audio Player 1 -->
        <div class="audio-player">
            <div class="audio-title">Audio Track 1</div>
            <audio id="audio1" src="audio-file1.mp3"></audio>
            <div class="controls">
                <button id="playPause1" class="play-button">Play</button>
                <input type="range" id="seekSlider1" class="time-slider" value="0">
            </div>
            <div id="timeInfo1" class="time-info">00:00 / 00:00</div>
        </div>

        <!-- Audio Player 2 -->
        <div class="audio-player">
            <div class="audio-title">Audio Track 2</div>
            <audio id="audio2" src="audio-file2.mp3"></audio>
            <div class="controls">
                <button id="playPause2" class="play-button">Play</button>
                <input type="range" id="seekSlider2" class="time-slider" value="0">
            </div>
            <div id="timeInfo2" class="time-info">00:00 / 00:00</div>
        </div>

    </div>

    <script>
        // Audio Player Objects
        const audioPlayers = [
            {
                audio: document.getElementById('audio1'),
                playButton: document.getElementById('playPause1'),
                seekSlider: document.getElementById('seekSlider1'),
                timeInfo: document.getElementById('timeInfo1')
            },
            {
                audio: document.getElementById('audio2'),
                playButton: document.getElementById('playPause2'),
                seekSlider: document.getElementById('seekSlider2'),
                timeInfo: document.getElementById('timeInfo2')
            }
        ];

        // Initialize Audio Players
        audioPlayers.forEach(player => {
            // Update Time Info and Seek Slider
            player.audio.addEventListener('loadedmetadata', () => {
                player.seekSlider.max = player.audio.duration;
                updateTimeInfo(player);
            });

            // Play/Pause Button Event
            player.playButton.addEventListener('click', () => {
                if (player.audio.paused) {
                    pauseAllOthers(player.audio);
                    player.audio.play();
                    player.playButton.textContent = 'Pause';
                } else {
                    player.audio.pause();
                    player.playButton.textContent = 'Play';
                }
            });

            // Update Seek Slider as Audio Plays
            player.audio.addEventListener('timeupdate', () => {
                player.seekSlider.value = player.audio.currentTime;
                updateTimeInfo(player);
            });

            // Seek Slider Change Event
            player.seekSlider.addEventListener('input', () => {
                player.audio.currentTime = player.seekSlider.value;
                updateTimeInfo(player);
            });

            // Reset Play Button when Audio Ends
            player.audio.addEventListener('ended', () => {
                player.playButton.textContent = 'Play';
            });
        });

        // Function to Update Time Info Display
        function updateTimeInfo(player) {
            const currentTime = formatTime(player.audio.currentTime);
            const duration = formatTime(player.audio.duration);
            player.timeInfo.textContent = `${currentTime} / ${duration}`;
        }

        // Function to Format Time in MM:SS
        function formatTime(time) {
            const minutes = Math.floor(time / 60) || 0;
            const seconds = Math.floor(time % 60) || 0;
            return `${padZero(minutes)}:${padZero(seconds)}`;
        }

        // Function to Pad Zero for Single Digit Numbers
        function padZero(number) {
            return number < 10 ? '0' + number : number;
        }

        // Function to Pause All Other Audios
        function pauseAllOthers(currentAudio) {
            audioPlayers.forEach(player => {
                if (player.audio !== currentAudio) {
                    player.audio.pause();
                    player.playButton.textContent = 'Play';
                }
            });
        }
    </script>

</body>
</html>
